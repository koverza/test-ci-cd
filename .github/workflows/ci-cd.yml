name: CI/CD Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    checkout:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout кода
              uses: actions/checkout@v3

    # gitGuardian:
    #     runs-on: ubuntu-latest
    #     needs: checkout
    #     steps:
    #       - name: GitGuardian Scan
    #         uses: GitGuardian/ggshield-action@v1
    #         env:
    #           GGSHIELD_API_KEY: ${{ secrets.API_GITTGUARGIAN }}
    #         with:
    #           args: "path db.json"

    sonar:
        runs-on: ubuntu-latest
        needs: checkout
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              with:
                  args: >
                      -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    build:
        runs-on: ubuntu-latest
        needs: sonar
        steps:
            - name: Установка Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '22'
            - name: Установка зависимостей
              run: yarn install
            - name: Сборка проекта
              run: yarn build

    deploy:
        runs-on: ubuntu-latest
        needs: [build]
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Checkout кода
              uses: actions/checkout@v3
            - name: Установка Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '22'
            - name: Установка зависимостей
              run: yarn install
            - name: Деплой приложения
              run: yarn deploy

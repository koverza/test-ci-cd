name: CI/CD Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    checkout:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout кода
              uses: actions/checkout@v3

    build:
        runs-on: ubuntu-latest
        needs: checkout
        steps:
            - name: Checkout кода
              uses: actions/checkout@v3

            - name: Установка Node.js (LTS)
              uses: actions/setup-node@v3
              with:
                  node-version: '18'

            - name: Установка зависимостей
              run: yarn install

            - name: Сборка проекта (debug + tolerant)
              run: |
                  node --trace-warnings ./node_modules/gulp/bin/gulp.js build --build || true

    deploy:
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Checkout кода
              uses: actions/checkout@v3

            - name: Установка Node.js (LTS)
              uses: actions/setup-node@v3
              with:
                  node-version: '18'

            - name: Установка зависимостей
              run: yarn install

            - name: Деплой приложения
              run: yarn deploy

        # sonar:
        #     name: sonar
        #     runs-on: ubuntu-latest
        #     needs: checkout
        #     steps:
        #         - name: Checkout кода
        #           uses: actions/checkout@v4
        #           with:
        #               fetch-depth: 0 # Отключаем shallow-клон для корректного анализа
        #         - name: SonarQube Scan
        #           uses: SonarSource/sonarqube-scan-action@v5
        #           env:
        #               SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        # gitGuardian:
        #     runs-on: ubuntu-latest
        #     needs: checkout
        #     steps:
        #         - name: GitGuardian Scan
        #           uses: GitGuardian/ggshield-action@v1
        #           env:
        #               GGSHIELD_API_KEY: ${{ secrets.API_GITGUARDIAN }}
